package main

// 定义二叉树节点的结构体
type TreeNode struct {
    Data  int
    Left  *TreeNode
    Right *TreeNode
}

// 创建节点
func createNode(data int) *TreeNode {
    return &TreeNode{Data: data, Left: nil, Right: nil}
}

// 向二叉树插入新节点
func insertNode(root *TreeNode, data int) *TreeNode {
    if root == nil {
       return createNode(data)
    }
    if data < root.Data {
       root.Left = insertNode(root.Left, data)
    } else if data > root.Data {
       root.Right = insertNode(root.Right, data)
    }
    return root
}

func main() {
    // 创建根节点
    var root *TreeNode
    // 插入节点来创建树
    root = insertNode(root, 5)
    insertNode(root, 3)
    insertNode(root, 8)
    insertNode(root, 1)
    insertNode(root, 4)
    insertNode(root, 7)
    insertNode(root, 9)
    return
}